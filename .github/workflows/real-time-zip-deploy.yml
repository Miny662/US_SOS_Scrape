name: Real-Time .zip Deploy
on:
  push:
    branches:
      - PAL-2219_ci_cd_updates
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
jobs:
  autodiscover:
    runs-on: ubuntu-latest
    outputs:
      lambda_array: ${{ steps.get-lambdas.outputs.lambdas }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get Lambdas
        id: get-lambdas
        run: |
          cd real-time
          tree -d -L 1 -J
          lambdas=$(tree -d -L 1 -J | jq -j -c '.[0].contents | map(.name)')
          echo ::set-output name=lambdas::${lambdas}
  zip_and_deploy:
    name: zip and deploy
    needs: autodiscover
    strategy:
      matrix:
        lambda: ${{ fromJSON(needs.autodiscover.outputs.lambda_array) }}
    runs-on: ubuntu-latest
    outputs:
      zip_name: ${{ steps.create-zip.outputs.zip_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Assume AWS IAM Role
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.CI_CD_IAM_ROLE }}
          aws-region: us-east-1
      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"
      - name: Get timestamp
        id: get-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"
      - name: Create zip and deploy
        id: create-zip-and-deploy
        run: |
          cd real-time/AL
          echo ${{matrix.lambda}}
          pwd
          ls -al
          zip -r real_time_al_${{ steps.get-commit-hash.outputs.commit-hash }}_${{ steps.get-timestamp.outputs.timestamp }}.zip .
          ls -al